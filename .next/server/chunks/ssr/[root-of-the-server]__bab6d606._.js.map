{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS%20Vivobook/Downloads/connect-app/connect-app/src/app/admin/layout.js"],"sourcesContent":["// \"use client\" menandakan bahwa komponen ini adalah \"Client Component\".\r\n// Artinya, komponen ini bisa menggunakan fitur interaktif di browser,\r\n// seperti mengelola state (useState) dan merespons klik dari pengguna (onClick).\r\n// Ini penting karena kita punya sidebar yang bisa dibuka-tutup.\r\n\"use client\";\r\nimport { useState } from \"react\";\r\nimport Link from \"next/link\";\r\nimport {\r\n  IconLogout2,\r\n  IconNews,\r\n  IconUser,\r\n  IconUserCog,\r\n  IconHome,\r\n  IconHelp,\r\n  IconRobot,\r\n  IconMenu2,\r\n  IconX,\r\n} from \"@tabler/icons-react\";\r\nexport default function AdminLayout({ children }) {\r\n  const [isSidebarOpen, setSidebarOpen] = useState(false);\r\n  const navLinks = [\r\n    { href: \"/admin/dashboard\", icon: <IconHome />, label: \"Dashboard\" },\r\n    { href: \"/admin/users\", icon: <IconUser />, label: \"User\" },\r\n    { href: \"/admin/roles\", icon: <IconUserCog />, label: \"Hak akses\" },\r\n    { href: \"/admin/news\", icon: <IconNews />, label: \"Berita\" },\r\n    { href: \"/admin/help\", icon: <IconHelp />, label: \"Help\" },\r\n    { href: \"/admin/about-app\", icon: <IconRobot />, label: \"About App\" },\r\n  ];\r\n\r\n  // 'return' berisi struktur HTML (ditulis dalam JSX) dari komponen ini.\r\n  return (\r\n    // 'div' utama yang membungkus seluruh layout.\r\n    <div className=\"relative flex min-h-screen bg-gray-100\">\r\n      \r\n      {/* Overlay untuk tampilan mobile */}\r\n      {/* Ini adalah \"conditional rendering\".\r\n          Overlay gelap ini hanya akan muncul jika 'isSidebarOpen' bernilai 'true'.\r\n          'md:hidden' berarti overlay ini akan disembunyikan di layar ukuran medium ke atas (desktop). */}\r\n      {isSidebarOpen && (\r\n        <div\r\n          className=\"fixed inset-0 z-20 bg-black bg-opacity-50 md:hidden\"\r\n          onClick={() => setSidebarOpen(false)} // Kalau overlay diklik, sidebar akan tertutup.\r\n        ></div>\r\n      )}\r\n\r\n      {/* Sidebar (Menu Samping) */}\r\n      <aside\r\n        id=\"navigation\"\r\n        // ClassName ini dinamis.\r\n        // Bagian `${isSidebarOpen ? \"translate-x-0\" : \"-translate-x-full\"}` akan:\r\n        // - Memberi class 'translate-x-0' (tampil) jika sidebar terbuka.\r\n        // - Memberi class '-translate-x-full' (sembunyi ke kiri) jika sidebar tertutup.\r\n        // Ini yang menciptakan efek animasi geser (slide).\r\n        className={`fixed inset-y-0 left-0 z-30 flex w-72 transform flex-col bg-white p-6 transition-transform duration-300 ease-in-out md:relative md:translate-x-0 border-r-2 border-gray-200 ${\r\n          isSidebarOpen ? \"translate-x-0\" : \"-translate-x-full\"\r\n        }`}\r\n      >\r\n        {/* Bagian atas sidebar: Judul dan tombol close */}\r\n        <div className=\"mb-10 flex items-center justify-between\">\r\n          <h1 className=\"text-3xl font-bold text-black\">Connect</h1>\r\n          <button\r\n            className=\"text-black md:hidden\" // Tombol close hanya muncul di mobile.\r\n            onClick={() => setSidebarOpen(false)}\r\n          >\r\n            <IconX />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Navigasi utama */}\r\n        <nav className=\"flex-grow\">\r\n          <ul className=\"flex flex-col space-y-2\">\r\n            {/* Kita menggunakan '.map()' untuk me-render daftar link secara otomatis\r\n                berdasarkan array 'navLinks' yang sudah kita buat di atas.\r\n                Ini jauh lebih efisien daripada menulis setiap link satu per satu. */}\r\n            {navLinks.map((link) => (\r\n              // 'key' sangat penting di React. Ia membantu React mengenali setiap elemen\r\n              // dalam list secara unik, ini penting untuk performa.\r\n              <li key={link.href}>\r\n                <Link\r\n                  href={link.href}\r\n                  onClick={() => setSidebarOpen(false)} // Setiap link diklik, sidebar otomatis tertutup (berguna di mobile).\r\n                  className=\"flex items-center gap-3 rounded-lg p-3 text-lg font-bold text-gray-800 transition-colors hover:bg-black hover:text-white\"\r\n                >\r\n                  {link.icon} {/* Menampilkan ikon */}\r\n                  <span>{link.label}</span> {/* Menampilkan teks label */}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </nav>\r\n\r\n        {/* Bagian bawah sidebar: Tombol Logout */}\r\n        <div>\r\n          <button className=\"flex w-full items-center gap-3 rounded-lg p-3 text-lg font-bold text-gray-800 transition-colors hover:bg-black hover:text-white\">\r\n            <IconLogout2 />\r\n            <span>Logout</span>\r\n          </button>\r\n        </div>\r\n      </aside>\r\n\r\n      {/* Konten Utama */}\r\n      <div className=\"flex flex-1 flex-col\">\r\n        {/* Header untuk tampilan mobile */}\r\n        {/* Header ini hanya akan muncul di mobile ('md:hidden') */}\r\n        <header className=\"sticky top-0 z-10 flex h-16 items-center justify-between border-b bg-white px-4 md:hidden\">\r\n          <h1 className=\"text-2xl font-bold text-black\">Connect</h1>\r\n          {/* Tombol hamburger menu untuk membuka sidebar */}\r\n          <button onClick={() => setSidebarOpen(true)} className=\"text-black\">\r\n            <IconMenu2 />\r\n          </button>\r\n        </header>\r\n\r\n        {/* Di sinilah konten dari setiap halaman akan dirender.\r\n            '{children}' adalah properti khusus di React yang berisi komponen\r\n            atau elemen yang \"dibungkus\" oleh komponen ini. Jadi, saat kamu membuka\r\n            halaman /admin/dashboard, komponen Dashboard-lah yang akan menjadi 'children'. */}\r\n        <main className=\"flex-1 bg-white\">{children}</main>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"AAAA,wEAAwE;AACxE,sEAAsE;AACtE,iFAAiF;AACjF,gEAAgE;;;;;AAEhE;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;;;;;AAce,SAAS,YAAY,EAAE,QAAQ,EAAE;IAC9C,MAAM,CAAC,eAAe,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,WAAW;QACf;YAAE,MAAM;YAAoB,oBAAM,8OAAC,sNAAA,CAAA,WAAQ;;;;;YAAK,OAAO;QAAY;QACnE;YAAE,MAAM;YAAgB,oBAAM,8OAAC,sNAAA,CAAA,WAAQ;;;;;YAAK,OAAO;QAAO;QAC1D;YAAE,MAAM;YAAgB,oBAAM,8OAAC,4NAAA,CAAA,cAAW;;;;;YAAK,OAAO;QAAY;QAClE;YAAE,MAAM;YAAe,oBAAM,8OAAC,sNAAA,CAAA,WAAQ;;;;;YAAK,OAAO;QAAS;QAC3D;YAAE,MAAM;YAAe,oBAAM,8OAAC,sNAAA,CAAA,WAAQ;;;;;YAAK,OAAO;QAAO;QACzD;YAAE,MAAM;YAAoB,oBAAM,8OAAC,wNAAA,CAAA,YAAS;;;;;YAAK,OAAO;QAAY;KACrE;IAED,uEAAuE;IACvE,OACE,8CAA8C;kBAC9C,8OAAC;QAAI,WAAU;;YAMZ,+BACC,8OAAC;gBACC,WAAU;gBACV,SAAS,IAAM,eAAe;;;;;;0BAKlC,8OAAC;gBACC,IAAG;gBACH,yBAAyB;gBACzB,0EAA0E;gBAC1E,iEAAiE;gBACjE,gFAAgF;gBAChF,mDAAmD;gBACnD,WAAW,CAAC,4KAA4K,EACtL,gBAAgB,kBAAkB,qBAClC;;kCAGF,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAgC;;;;;;0CAC9C,8OAAC;gCACC,WAAU,uBAAuB,uCAAuC;;gCACxE,SAAS,IAAM,eAAe;0CAE9B,cAAA,8OAAC,gNAAA,CAAA,QAAK;;;;;;;;;;;;;;;;kCAKV,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAG,WAAU;sCAIX,SAAS,GAAG,CAAC,CAAC,OACb,2EAA2E;gCAC3E,sDAAsD;8CACtD,8OAAC;8CACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;wCACH,MAAM,KAAK,IAAI;wCACf,SAAS,IAAM,eAAe;wCAC9B,WAAU;;4CAET,KAAK,IAAI;4CAAC;0DACX,8OAAC;0DAAM,KAAK,KAAK;;;;;;4CAAQ;;;;;;;mCAPpB,KAAK,IAAI;;;;;;;;;;;;;;;kCAexB,8OAAC;kCACC,cAAA,8OAAC;4BAAO,WAAU;;8CAChB,8OAAC,4NAAA,CAAA,cAAW;;;;;8CACZ,8OAAC;8CAAK;;;;;;;;;;;;;;;;;;;;;;;0BAMZ,8OAAC;gBAAI,WAAU;;kCAGb,8OAAC;wBAAO,WAAU;;0CAChB,8OAAC;gCAAG,WAAU;0CAAgC;;;;;;0CAE9C,8OAAC;gCAAO,SAAS,IAAM,eAAe;gCAAO,WAAU;0CACrD,cAAA,8OAAC,wNAAA,CAAA,YAAS;;;;;;;;;;;;;;;;kCAQd,8OAAC;wBAAK,WAAU;kCAAmB;;;;;;;;;;;;;;;;;;AAI3C","debugId":null}}]
}